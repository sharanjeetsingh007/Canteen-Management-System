{"version":3,"sources":["common.js","firebase.js","views/pages/login/Login.js"],"names":["getUser","userStr","sessionStorage","getItem","JSON","parse","setUserSession","token","user","setItem","stringify","removeProductFromCart","pid","items","forEach","item","index","push","count","total","price","getCartsToString","result","name","addProductToCart","imgurl","products","found","getCartItem","removeAllProductFromCart","getCartCount","getTotalPrice","componentLoader","lazyComponent","attemptsLeft","interval","Promise","resolve","reject","then","catch","error","setTimeout","validateData","type","value","errors","isValid","RegExp","test","length","auth_","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","getUserDocument","uid","a","doc","get","userDocument","data","console","generateUserDocument","displayName","phoneNumber","userRef","exists","email","set","rule","photoUrl","Login","useState","setEmail","password","setPassword","setError","authenticated","setAuthenticated","onChangeHandler","event","currentTarget","log","to","className","md","placeholder","autoComplete","onChange","e","xs","color","onClick","preventDefault","signInWithEmailAndPassword","userAuth","refreshToken","message","signInWithEmailAndPasswordHandler","style","width","active","tabIndex"],"mappings":"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","file":"static/js/11.b6b4e298.chunk.js","sourcesContent":["export const getUser = () => {\r\n    const userStr = sessionStorage.getItem('user');\r\n    if (userStr) return JSON.parse(userStr);\r\n    else return null;\r\n  }\r\n   \r\n  // return the token from the session storage\r\n  export const getToken = () => {\r\n    return sessionStorage.getItem('token') || null;\r\n  }\r\n   \r\n  // remove the token and user from the session storage\r\n  export const removeUserSession = () => {\r\n    sessionStorage.removeItem('token');\r\n    sessionStorage.removeItem('user');\r\n  }\r\n   \r\n  // set the token and user from the session storage\r\n  export const setUserSession = (token, user) => {\r\n    sessionStorage.setItem('token', token);\r\n    sessionStorage.setItem('user', JSON.stringify(user));\r\n  }\r\n\r\n  export const removeProductFromCart = (pid) => {\r\n    var items = [];\r\n    var products = JSON.parse(sessionStorage.getItem(\"_products\") || \"[]\");\r\n    products.forEach(function(item, index) {\r\n        if (item.pid !== pid)\r\n        {\r\n            items.push(item);\r\n        }\r\n        else\r\n        {\r\n            if (item.count > 1)\r\n            {\r\n                item.count--;\r\n                item.total = item.price * item.count;\r\n                items.push(item);\r\n            }\r\n        }\r\n    });\r\n    sessionStorage.setItem(\"_products\", JSON.stringify(items));\r\n  }\r\n\r\n  export const getCartsToString = () => {\r\n    let result = [];\r\n    var products = JSON.parse(sessionStorage.getItem(\"_products\") || \"[]\");\r\n\r\n    products.forEach(function(item, index) {\r\n        result.push(\r\n            item.name + \" $\" + item.price + \" x \" + item.count + \" = $\" + item.total\r\n        ); \r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  export const addProductToCart = (pid, name, price, imgurl) => {\r\n\r\n    var products = JSON.parse(sessionStorage.getItem(\"_products\") || \"[]\");\r\n\r\n    var found = false;\r\n    products.forEach(function(item, index) {\r\n        if (item.pid === pid)\r\n        {\r\n            found = true;\r\n            item.count++;\r\n            item.total = item.price * item.count;\r\n        }\r\n    });\r\n\r\n    \r\n    if (!found)\r\n    {\r\n        // Modifying\r\n        var item = {\r\n            pid: pid,\r\n            name: name,\r\n            price: price,\r\n            imgurl: imgurl,\r\n            total: price * 1,\r\n            count: 1\r\n        };\r\n        products.push(item);\r\n    }\r\n\r\n    // Saving\r\n    sessionStorage.setItem(\"_products\", JSON.stringify(products));\r\n}\r\n\r\nexport const getCartItem = () => {\r\n    return JSON.parse(sessionStorage.getItem('_products') || \"[]\");\r\n}\r\n\r\nexport const removeAllProductFromCart = () => {\r\n    let products = [];\r\n    sessionStorage.setItem(\"_products\", JSON.stringify(products));\r\n}\r\n\r\nexport const getCartCount = () => {\r\n    var products = JSON.parse(sessionStorage.getItem(\"_products\") || \"[]\");\r\n    var count = 0;\r\n    products.forEach(function(item, index) {\r\n        count += item.count;\r\n    });\r\n    return count;\r\n}\r\n\r\nexport const getTotalPrice = () => {\r\n    var products = JSON.parse(sessionStorage.getItem(\"_products\") || \"[]\");\r\n    var count = 0;\r\n    products.forEach(function(item, index) {\r\n        count += item.count * item.price;\r\n    });\r\n    return count;\r\n}\r\n\r\nexport default function componentLoader(lazyComponent, attemptsLeft, interval) {\r\n    return new Promise((resolve, reject) => {\r\n        lazyComponent()\r\n        .then(resolve)\r\n        .catch((error) => {\r\n            // let us retry after 1500 ms\r\n            setTimeout(() => {\r\n                if (attemptsLeft === 1) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                componentLoader(lazyComponent, attemptsLeft - 1).then(resolve, reject);\r\n            }, 5000);\r\n        });\r\n    });\r\n}\r\n\r\nexport const validateData = (type, value) => {\r\n\r\n    let errors = \"\";\r\n    let isValid = true;\r\n\r\n    if (type === 'name' && !value) {\r\n      isValid = false;\r\n      errors = \"Please enter your name.\";\r\n    }\r\n\r\n    if (type === 'email' && !value) {\r\n      isValid = false;\r\n      errors = \"Please enter your email Address.\";\r\n    }\r\n\r\n    if (type === 'email' && typeof value !== \"undefined\") {\r\n        \r\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n      if (!pattern.test(value)) {\r\n        isValid = false;\r\n        errors = \"Please enter valid email address.\";\r\n      }\r\n    }\r\n\r\n    if (type === 'phone' && !value) {\r\n      isValid = false;\r\n      errors = \"Please enter your phone number.\";\r\n    }\r\n\r\n    if (type === 'phone' && typeof value !== \"undefined\") {\r\n        \r\n      var pattern = new RegExp(/^\\+[0-9\\b]+$/);\r\n      if (!pattern.test(value)) {\r\n        isValid = false;\r\n        errors = \"Please enter only number.\";\r\n      }else if(value.length < 10){\r\n        isValid = false;\r\n        errors = \"Please enter valid phone number.\";\r\n      }\r\n    }\r\n\r\n    return [isValid, errors];\r\n}","import firebase from 'firebase/app'\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCtv0SrPL04mrat1QIvWI8Q4e7yGoWgt1s\",\r\n  authDomain: \"ict342-user.firebaseapp.com\",\r\n  databaseURL: \"https://ict342-user-default-rtdb.firebaseio.com\",\r\n  projectId: \"ict342-user\",\r\n  storageBucket: \"ict342-user.appspot.com\",\r\n  messagingSenderId: \"71121181583\",\r\n  appId: \"1:71121181583:web:475e97730cdd78962189fa\"\r\n};\r\n\r\n\r\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);\r\nexport const auth_ = firebase.auth;\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n\r\nexport const getUserDocument = async uid => {\r\n    if (!uid) return null;\r\n    try {\r\n        const userDocument = await firestore.doc(`users/${uid}`).get();\r\n        return {\r\n            uid,\r\n            ...userDocument.data()\r\n        };\r\n    } catch (error) {\r\n        console.error(\"Error fetching user\", error);\r\n    }\r\n};\r\n\r\n\r\nexport const generateUserDocument = async (user, displayName, phoneNumber) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    const snapshot = await userRef.get();\r\n    if (!snapshot.exists) {\r\n        const rule = \"\";\r\n        const photoUrl = \"\";\r\n        const { email } = user;\r\n        try {\r\n            await userRef.set({\r\n                email,\r\n                displayName,\r\n                phoneNumber,\r\n                rule,\r\n                photoUrl,\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Error creating user document\", error);\r\n        }\r\n    }\r\n    return getUserDocument(user.uid);\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardGroup,\r\n    CCardFooter,\r\n    CCol,\r\n    CContainer,\r\n    CForm,\r\n    CInput,\r\n    CInputGroup,\r\n    CInputGroupPrepend,\r\n    CInputGroupText,\r\n    CRow\r\n} from '@coreui/react';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport CIcon from '@coreui/icons-react';\r\nimport { auth, getUserDocument } from \"../../../firebase\";\r\nimport { setUserSession, getUser } from '../../../common';\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState(null);\r\n    const [authenticated, setAuthenticated] = useState(false);\r\n    const signInWithEmailAndPasswordHandler = (event,email, password) => {\r\n        event.preventDefault();\r\n        setError(null);\r\n        setAuthenticated(false);\r\n        auth.signInWithEmailAndPassword(email, password)\r\n        .then((userAuth) => {\r\n            getUserDocument(userAuth.user.uid)\r\n            .then(data => {\r\n                setUserSession(userAuth.user.refreshToken, data);\r\n                setAuthenticated(true);\r\n            })\r\n            .catch(error => {\r\n                setAuthenticated(false);    \r\n                setError(error.message);\r\n            });\r\n            \r\n        })\r\n        .catch(error => { \r\n            setAuthenticated(false);\r\n            setError(error.message);\r\n        });\r\n    };\r\n\r\n    const onChangeHandler = (event) => {\r\n        const {name, value} = event.currentTarget;\r\n\r\n        if(name === 'userEmail') {\r\n            setEmail(value);\r\n        }\r\n        else if(name === 'userPassword'){\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    if (authenticated)\r\n    {\r\n        const user = getUser();\r\n        console.log(user);\r\n        if (user.rule !== \"admin\")\r\n            return (<Redirect to=\"/today-menu\" />);\r\n        else\r\n            return (<Redirect to=\"/\" />);\r\n    }\r\n  \r\n    return (\r\n        <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n            <CContainer>\r\n                <CRow className=\"justify-content-center\">\r\n                    <CCol md=\"8\">\r\n                        <CCardGroup>\r\n                            <CCard className=\"p-4\">\r\n                                <CCardBody>\r\n                                    <CForm>\r\n                                        <h1>Login</h1>\r\n                                        <p className=\"text-muted\">Sign In to your account</p>\r\n                                        <CInputGroup className=\"mb-3\">\r\n                                            <CInputGroupPrepend>\r\n                                                <CInputGroupText>\r\n                                                    <CIcon name=\"cil-user\" />\r\n                                                </CInputGroupText>\r\n                                            </CInputGroupPrepend>\r\n                                            <CInput type=\"email\" placeholder=\"User Email\" name='userEmail' autoComplete=\"userEmail\" \r\n                                                        onChange={(e) => {\r\n                                                            onChangeHandler(e);\r\n                                                        }} />\r\n                                        </CInputGroup>\r\n                                        <CInputGroup className=\"mb-4\">\r\n                                            <CInputGroupPrepend>\r\n                                                <CInputGroupText>\r\n                                                    <CIcon name=\"cil-lock-locked\" />\r\n                                                </CInputGroupText>\r\n                                            </CInputGroupPrepend>\r\n                                            <CInput type=\"password\" placeholder=\"Password\" name='userPassword' autoComplete=\"userPassword\" \r\n                                                        onChange={(e) => {\r\n                                                            onChangeHandler(e);\r\n                                                        }} />\r\n                                        </CInputGroup>\r\n                                        <CRow>\r\n                                            <CCol xs=\"6\">\r\n                                                <CButton color=\"primary\" className=\"px-4\" onClick={(e) => {\r\n                                                    signInWithEmailAndPasswordHandler(e, email, password);\r\n                                                }}>Login</CButton>\r\n                                            </CCol>\r\n                                            <CCol xs=\"6\" className=\"text-right\">\r\n                                                <CButton color=\"link\" className=\"px-0\">Forgot password?</CButton>\r\n                                            </CCol>\r\n                                        </CRow>\r\n                                        {error && <>\r\n                                            <CRow>\r\n                                                <small style={{color: 'red'}}>{error}</small>\r\n                                            </CRow>\r\n                                        </>}\r\n                                    </CForm>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                            <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\r\n                                <CCardBody className=\"text-center\">\r\n                                    <div>\r\n                                        <h2>Sign up</h2>\r\n                                        <p>Please sing up if you have not an account.</p>\r\n                                        <Link to=\"/register\">\r\n                                            <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</CButton>\r\n                                        </Link>\r\n                                    </div>\r\n                                </CCardBody>\r\n                            </CCard>\r\n                        </CCardGroup>\r\n                    </CCol>\r\n                </CRow>\r\n            </CContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"],"sourceRoot":""}