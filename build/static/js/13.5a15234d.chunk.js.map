{"version":3,"sources":["services/orders.service.js","views/admin/UserOrders.js"],"names":["db","firestore","collection","OrdersDataService","item","add","id","value","doc","update","delete","UserOrders","props","onDataChange","bind","state","orders","user","getUser","unsubscribe","undefined","this","getAll","orderBy","onSnapshot","items","forEach","data","uid","push","username","date","status","total","order","setState","fields","key","_classes","hover","striped","clickableRows","scopedSlots","color","style","width","onClick","e","to","Component"],"mappings":"mMAEMA,E,OAAKC,EAAUC,WAAW,WAC1BC,E,sFACF,WACI,OAAOH,I,oBAGX,SAAOI,GACH,OAAOJ,EAAGK,IAAID,K,oBAGlB,SAAOE,EAAIC,GACP,OAAOP,EAAGQ,IAAIF,GAAIG,OAAOF,K,oBAG7B,SAAOD,GACH,OAAON,EAAGQ,IAAIF,GAAII,a,KAIX,QAAIP,G,oJCPbQ,E,kDAEF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,MAAQ,CACTC,OAAQ,GACRC,KAAMC,eAGV,EAAKC,iBAAcC,EARJ,E,qDAWnB,WACIC,KAAKF,YAAchB,IAAkBmB,SAChCC,QAAQ,OAAQ,QAChBC,WAAWH,KAAKR,gB,kCAGzB,WACIQ,KAAKF,gB,0BAGT,SAAaM,GAAQ,IAAD,OACZT,EAAS,GAEbS,EAAMC,SAAQ,SAAAtB,GACV,IAAIE,EAAKF,EAAKE,GACVqB,EAAOvB,EAAKuB,OAEZA,EAAKC,MAAQ,EAAKb,MAAME,KAAKW,KAE7BZ,EAAOa,KAAK,CACRvB,GAAIA,EACJsB,IAAKD,EAAKC,IACVE,SAAUH,EAAKG,SACfC,KAAMJ,EAAKI,KACXC,OAAQL,EAAKK,OACbC,MAAON,EAAKM,MACZC,MAAOP,EAAKO,WAKxBb,KAAKc,SAAS,CACVnB,OAAQA,M,oBAIhB,WAGI,OADaE,cAOT,eAAC,IAAD,WACI,cAAC,IAAD,wBAGA,cAAC,IAAD,UACI,cAAC,IAAD,CACIO,MAAOJ,KAAKN,MAAMC,OAClBoB,OAAQ,CACJ,CAAEC,IAAK,OAAQC,SAAU,oBACzB,SACA,QACA,QACA,UAEJC,OAAK,EACLC,SAAO,EACPC,eAAa,EACbC,YAAe,CACX,MACI,SAACtC,GAAD,OACI,mCAAMA,EAAK6B,UAEnB,OACI,SAAC7B,GAAD,OACI,+BAEyB,WAAhBA,EAAK4B,QAAwB,mCAC9B,cAAC,IAAD,CAASW,MAAM,SAASC,MAAoB,CAACC,MAAM,KAAMC,QAAS,SAACC,GAC3C5C,IAAkBO,OAAON,EAAKE,KADtD,SAGI,+CAIa,YAAhBF,EAAK4B,QAAyB,mCAC/B,cAAC,IAAD,CAASW,MAAM,SAASC,MAAoB,CAACC,MAAM,KAAMC,QAAS,SAACC,GAC3C5C,IAAkBO,OAAON,EAAKE,KADtD,SAGI,2DA1C5B,cAAC,IAAD,CAAU0C,GAAG,e,GAtDRC,aA6GVtC","file":"static/js/13.5a15234d.chunk.js","sourcesContent":["import { firestore } from \"../firebase\";\r\n\r\nconst db = firestore.collection(\"/orders\");\r\nclass OrdersDataService {\r\n    getAll() {\r\n        return db;\r\n    }\r\n\r\n    create(item) {\r\n        return db.add(item);\r\n    }\r\n\r\n    update(id, value) {\r\n        return db.doc(id).update(value);\r\n    }\r\n\r\n    delete(id) {\r\n        return db.doc(id).delete();\r\n    }\r\n}\r\n\r\nexport default new OrdersDataService();","import React, { Component } from 'react';\r\nimport OrdersDataService from '../../services/orders.service';\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CDataTable,\r\n    CButton,\r\n} from '@coreui/react';\r\n\r\nimport CIcon from '@coreui/icons-react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getUser } from '../../common';\r\n\r\nclass UserOrders extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.onDataChange = this.onDataChange.bind(this);\r\n        this.state = {\r\n            orders: [],\r\n            user: getUser(),\r\n        };\r\n\r\n        this.unsubscribe = undefined;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unsubscribe = OrdersDataService.getAll()\r\n            .orderBy(\"date\", \"desc\")\r\n            .onSnapshot(this.onDataChange);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unsubscribe();\r\n    }\r\n\r\n    onDataChange(items) {\r\n        let orders = [];\r\n        let order_id = 1;\r\n        items.forEach(item => {\r\n            let id = item.id;\r\n            let data = item.data();\r\n            \r\n            if (data.uid === this.state.user.uid)\r\n            {\r\n                orders.push({\r\n                    id: id,\r\n                    uid: data.uid,\r\n                    username: data.username,\r\n                    date: data.date,\r\n                    status: data.status,\r\n                    total: data.total,\r\n                    order: data.order,\r\n                });\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            orders: orders,\r\n        });\r\n    }\r\n\r\n    render ()\r\n    {\r\n        const user = getUser();\r\n        if (!user)\r\n        {\r\n            return (<Redirect to=\"/login\" />);\r\n        }\r\n\r\n        return (\r\n            <CCard>\r\n                <CCardHeader>\r\n                    My Orders\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                    <CDataTable\r\n                        items={this.state.orders}\r\n                        fields={[\r\n                            { key: 'date', _classes: 'font-weight-bold' },\r\n                            'status', \r\n                            'total', \r\n                            'order',\r\n                            'action'\r\n                        ]}\r\n                        hover\r\n                        striped\r\n                        clickableRows\r\n                        scopedSlots = {{\r\n                            'total':\r\n                                (item) => (\r\n                                    <td>${item.total}</td>\r\n                                ),\r\n                            'action':\r\n                                (item) => (\r\n                                    <td>\r\n                                        {\r\n                                            (item.status === \"cancel\") && <>\r\n                                            <CButton color='danger' style={{height:36}, {width:120}} onClick={(e) => {\r\n                                                                    OrdersDataService.delete(item.id);\r\n                                                                }}>\r\n                                                <small>Remove</small>\r\n                                            </CButton></>\r\n                                        }\r\n                                        {\r\n                                            (item.status === \"pending\") && <>\r\n                                            <CButton color='danger' style={{height:36}, {width:120}} onClick={(e) => {\r\n                                                                    OrdersDataService.delete(item.id);\r\n                                                                }}>\r\n                                                <small>Cancel</small>\r\n                                            </CButton></>\r\n                                        }\r\n                                    </td>\r\n                                )\r\n                            }}\r\n                        />\r\n                </CCardBody>\r\n            </CCard>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserOrders;"],"sourceRoot":""}