{"version":3,"sources":["services/products.service.js","views/admin/AddProduct.js"],"names":["db","firestore","collection","ProductsDataService","products","add","id","value","doc","update","delete","AddProduct","props","onChangeCategory","bind","onChangeName","onChangePrice","onChangeImgUrl","onChangeDescription","onAddProduct","state","category","name","price","imgurl","description","submitted","error","e","console","log","target","this","setState","data","trending","create","then","catch","message","getUser","className","md","htmlFor","custom","onChange","type","placeholder","sm","color","onClick","style","to","Component"],"mappings":"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","file":"static/js/14.cf6c78bf.chunk.js","sourcesContent":["import { firestore } from \"../firebase\";\r\n\r\nconst db = firestore.collection(\"/products\");\r\nclass ProductsDataService {\r\n    getAll() {\r\n        return db;\r\n    }\r\n\r\n    create(products) {\r\n        return db.add(products);\r\n    }\r\n\r\n    update(id, value) {\r\n        return db.doc(id).update(value);\r\n    }\r\n\r\n    delete(id) {\r\n        return db.doc(id).delete();\r\n    }\r\n}\r\n\r\nexport default new ProductsDataService();","import React, { Component } from 'react';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CSelect,\r\n  CFormGroup,\r\n  CLabel,\r\n  CRow,\r\n  CCardFooter\r\n} from '@coreui/react'\r\n\r\nimport ProductsDataService from '../../services/products.service';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getUser } from '../../common';\r\n\r\nclass AddProduct extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeCategory = this.onChangeCategory.bind(this);\r\n        this.onChangeName = this.onChangeName.bind(this);\r\n        this.onChangePrice = this.onChangePrice.bind(this);\r\n        this.onChangeImgUrl = this.onChangeImgUrl.bind(this);\r\n        this.onChangeDescription = this.onChangeDescription.bind(this);\r\n        this.onAddProduct = this.onAddProduct.bind(this);\r\n\r\n        this.state = {\r\n            category: \"\",\r\n            name: \"\",\r\n            price: \"\",\r\n            imgurl: \"\",\r\n            description: \"\",\r\n            submitted: false,\r\n            error: null\r\n        };\r\n\r\n        this.state.category = \"pizza\";\r\n    }\r\n\r\n    onChangeCategory(e) {\r\n        console.log(e.target.value);\r\n        this.setState({\r\n            category: e.target.value,\r\n            error: null\r\n        });\r\n    }\r\n    \r\n    onChangeName(e) {\r\n        this.setState({\r\n            name: e.target.value,\r\n            error: null\r\n        });\r\n    }\r\n\r\n    onChangePrice(e) {\r\n        this.setState({\r\n            price: e.target.value,\r\n            error: null\r\n        });\r\n    }\r\n    \r\n    onChangeImgUrl(e) {\r\n        this.setState({\r\n            imgurl: e.target.value,\r\n            error: null\r\n        });\r\n    }\r\n    \r\n    onChangeDescription(e) {\r\n        this.setState({\r\n            description: e.target.value,\r\n            error: null\r\n        });\r\n    }\r\n\r\n    onAddProduct() {\r\n        let data = {\r\n            category: this.state.category,\r\n            name: this.state.name,\r\n            price: this.state.price,\r\n            imgurl: this.state.imgurl,\r\n            description: this.state.description,\r\n            trending: false,\r\n        };\r\n\r\n        ProductsDataService.create(data)\r\n        .then(() => {\r\n            this.setState({\r\n                error: \"Create new product successfully!\"\r\n            });\r\n\r\n            \r\n            this.setState({\r\n                submitted: true\r\n            });\r\n\r\n            console.log(\"Create new product successfully!\");\r\n        })\r\n        .catch((e) => {\r\n            this.setState({\r\n                error: e.message\r\n            });\r\n\r\n            this.setState({\r\n                submitted: false\r\n            });\r\n\r\n            console.log(e.message);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const user = getUser();\r\n        if (!user)\r\n        {\r\n            return (<Redirect to=\"/login\" />);\r\n        }\r\n\r\n        return (\r\n        <CContainer>\r\n            <CRow className=\"justify-content-center\">\r\n                <CCol md=\"8\">\r\n                    <CCard className=\"p-4\">\r\n                        <CCardBody>\r\n                            <CForm>\r\n                                <h1>Add Product</h1>\r\n                                <p className=\"text-muted\">Please add new product</p>\r\n                                <CFormGroup>\r\n                                    <CLabel htmlFor=\"category\">Category: </CLabel>\r\n                                    <CSelect custom name=\"category\" id=\"category\" onChange={(e) => {\r\n                                            this.onChangeCategory(e);\r\n                                        }}>\r\n                                        <option value=\"pizza\">Pizza</option>\r\n                                        <option value=\"drink\">Drink</option>\r\n                                        <option value=\"dessert\">Dessert</option>\r\n                                    </CSelect>\r\n                                </CFormGroup>\r\n                                <CFormGroup>\r\n                                    <CLabel htmlFor=\"product-name\">Name: </CLabel>\r\n                                    <CInput type=\"text\" placeholder=\"\" name=\"productname\" \r\n                                        onChange={(e) => {\r\n                                            this.onChangeName(e);\r\n                                        }}/>\r\n                                </CFormGroup>\r\n                                <CFormGroup>\r\n                                    <CLabel htmlFor=\"price\">Price: </CLabel>\r\n                                    <CInput type=\"text\" placeholder=\"\" name=\"price\" \r\n                                        onChange={(e) => {\r\n                                            this.onChangePrice(e);\r\n                                        }}/>\r\n                                </CFormGroup>\r\n                                <CFormGroup>\r\n                                    <CLabel htmlFor=\"image-url\">Image Url: </CLabel>\r\n                                    <CInput type=\"text\" placeholder=\"\" name=\"imgurl\" \r\n                                        onChange={(e) => {\r\n                                            this.onChangeImgUrl(e);\r\n                                        }} />\r\n                                </CFormGroup>\r\n                                <CFormGroup>\r\n                                    <CLabel htmlFor=\"description\">Description: </CLabel>\r\n                                    <CInput type=\"text\" placeholder=\"\" name=\"description\" \r\n                                        onChange={(e) => {\r\n                                            this.onChangeDescription(e);\r\n                                        }} />\r\n                                </CFormGroup>\r\n                                <CRow>\r\n                                    <CCol sm=\"12\">\r\n                                        <CButton color=\"primary\" className=\"px-4\" \r\n                                            onClick={() => {\r\n                                                this.onAddProduct();\r\n                                            }} >Add</CButton>\r\n                                    </CCol>\r\n                                </CRow>\r\n                            </CForm>\r\n                        </CCardBody>\r\n                        { this.state.error && \r\n                            <CCardFooter className=\"p-4\">\r\n                                <CRow>\r\n                                    { this.state.submitted === true && <>\r\n                                        <small style={{color: 'blue'}}>{this.state.error}</small>\r\n                                    </>}\r\n                                    { this.state.submitted === false && <>\r\n                                        <small style={{color: 'red'}}>{this.state.error}</small>\r\n                                    </>}\r\n                                </CRow>\r\n                            </CCardFooter>\r\n                        }\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n        </CContainer>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default AddProduct;"],"sourceRoot":""}