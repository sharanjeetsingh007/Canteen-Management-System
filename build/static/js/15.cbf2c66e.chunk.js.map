{"version":3,"sources":["services/products.service.js","views/admin/AllProducts.js"],"names":["db","firestore","collection","ProductsDataService","products","add","id","value","doc","update","delete","AllProducts","props","refreshList","bind","setActiveProduct","onDataChange","onRemoveProduct","onAddTrendingProduct","onRemoveTrendingProduct","state","trending_products","currentProduct","currentIndex","unsubscribe","undefined","product","items","push","category","name","price","imgurl","description","trending","then","console","log","getAll","orderBy","onSnapshot","catch","e","message","pid","this","forEach","item","data","setState","index","getUser","xl","fields","key","_classes","hover","striped","clickableRows","scopedSlots","color","style","width","onClick","className","src","height","to","Component"],"mappings":"mMAEMA,E,OAAKC,EAAUC,WAAW,aAC1BC,E,sFACF,WACI,OAAOH,I,oBAGX,SAAOI,GACH,OAAOJ,EAAGK,IAAID,K,oBAGlB,SAAOE,EAAIC,GACP,OAAOP,EAAGQ,IAAIF,GAAIG,OAAOF,K,oBAG7B,SAAOD,GACH,OAAON,EAAGQ,IAAIF,GAAII,a,KAIX,QAAIP,G,oJCJbQ,E,kDAEF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,gBAAkB,EAAKA,gBAAgBH,KAArB,gBACvB,EAAKI,qBAAuB,EAAKA,qBAAqBJ,KAA1B,gBAC5B,EAAKK,wBAA0B,EAAKA,wBAAwBL,KAA7B,gBAC/B,EAAKM,MAAQ,CACThB,SAAU,GACViB,kBAAmB,GACnBC,eAAgB,KAChBC,cAAe,GAGnB,EAAKC,iBAAcC,EAfJ,E,2DAkBnB,SAAwBC,GAAU,IAAD,OACzBC,EAAQ,GACRrB,EAAKoB,EAAQpB,GACjBqB,EAAMC,KAAK,CACPC,SAAUH,EAAQG,SAClBC,KAAMJ,EAAQI,KACdC,MAAOL,EAAQK,MACfC,OAAQN,EAAQM,OAChBC,YAAaP,EAAQO,YACrBC,UAAU,IAGd/B,IAAoBM,OAAOH,EAAIqB,EAAM,IACpCQ,MAAK,WAEFC,QAAQC,IAAI,kCACZ,EAAKb,YAAcrB,IAAoBmC,SACtCC,QAAQ,OAAQ,OAChBC,WAAW,EAAKxB,iBAEpByB,OAAM,SAACC,GACJN,QAAQC,IAAIK,EAAEC,c,kCAItB,SAAqBjB,GAAU,IAAD,OACtBC,EAAQ,GACRrB,EAAKoB,EAAQpB,GACjBqB,EAAMC,KAAK,CACPC,SAAUH,EAAQG,SAClBC,KAAMJ,EAAQI,KACdC,MAAOL,EAAQK,MACfC,OAAQN,EAAQM,OAChBC,YAAaP,EAAQO,YACrBC,UAAU,IAGd/B,IAAoBM,OAAOH,EAAIqB,EAAM,IACpCQ,MAAK,WAEFC,QAAQC,IAAI,kCACZ,EAAKb,YAAcrB,IAAoBmC,SACtCC,QAAQ,OAAQ,OAChBC,WAAW,EAAKxB,iBAEpByB,OAAM,SAACC,GACJN,QAAQC,IAAIK,EAAEC,c,6BAItB,SAAgBC,GAAM,IAAD,OACjBzC,IAAoBO,OAAOkC,GAC1BT,MAAK,WACFC,QAAQC,IAAI,kCACZ,EAAKb,YAAcrB,IAAoBmC,SACtCC,QAAQ,OAAQ,OAChBC,WAAW,EAAKxB,iBAEpByB,OAAM,SAACC,GAEJN,QAAQC,IAAIK,EAAEC,c,+BAItB,WACIE,KAAKrB,YAAcrB,IAAoBmC,SACtCC,QAAQ,OAAQ,OAChBC,WAAWK,KAAK7B,gB,kCAGrB,WACI6B,KAAKrB,gB,0BAGT,SAAaG,GACT,IAAIvB,EAAW,GACX8B,EAAW,GACfP,EAAMmB,SAAQ,SAAAC,GACV,IAAIzC,EAAKyC,EAAKzC,GACV0C,EAAOD,EAAKC,OAEhB5C,EAASwB,KAAK,CACVtB,GAAIA,EACJuB,SAAUmB,EAAKnB,SACfC,KAAMkB,EAAKlB,KACXC,MAAOiB,EAAKjB,MACZC,OAAQgB,EAAKhB,OACbC,YAAae,EAAKf,YAClBC,SAAUc,EAAKd,WAGfc,EAAKd,UAELA,EAASN,KAAK,CACVtB,GAAIA,EACJuB,SAAUmB,EAAKnB,SACfC,KAAMkB,EAAKlB,KACXC,MAAOiB,EAAKjB,MACZC,OAAQgB,EAAKhB,OACbC,YAAae,EAAKf,YAClBC,SAAUc,EAAKd,cAK3BW,KAAKI,SAAS,CACV7C,SAAUA,EACViB,kBAAmBa,M,yBAI3B,WACIW,KAAKI,SAAS,CACV3B,eAAgB,KAChBC,cAAe,M,8BAIvB,SAAiBG,EAASwB,GACtBL,KAAKI,SAAS,CACV3B,eAAgBI,EAChBH,aAAc2B,M,oBAItB,WACC,IAAD,OAEI,OADaC,cAMT,eAAC,IAAD,WACI,cAAC,IAAD,CAAMC,GAAI,EAAV,SACI,eAAC,IAAD,WACI,cAAC,IAAD,wBAGA,cAAC,IAAD,UACI,cAAC,IAAD,CACIzB,MAAOkB,KAAKzB,MAAMhB,SAClBiD,OAAQ,CACJ,CAAEC,IAAK,OAAQC,SAAU,oBACzB,WACA,QACA,SACA,cACA,UAEJC,OAAK,EACLC,SAAO,EACPC,eAAa,EACbC,YAAe,CACX,OACI,SAACZ,GAAD,OACI,+BACI,cAAC,IAAD,CAASa,MAAM,SAASC,MAAoB,CAACC,MAAM,KAAMC,QAAS,SAACrB,GAC3D,EAAKzB,gBAAgB8B,EAAKzC,KADlC,SAGI,6CAEJ,cAAC,IAAD,CAASsD,MAAM,UAAUC,MAAoB,CAACC,MAAM,KAAMC,QAAS,SAACrB,GAC5D,EAAKxB,qBAAqB6B,IADlC,SAGI,mDAId,OACE,SAACA,GAAD,OACI,6BAEwB,KAAhBA,EAAKf,QACL,qBAAKgC,UAAU,WAAf,SACI,cAAC,IAAD,CACIC,IAAKlB,EAAKf,OACVgC,UAAU,4BAWtD,cAAC,IAAD,CAAMZ,GAAI,EAAV,SACI,eAAC,IAAD,WACI,cAAC,IAAD,6BAGA,cAAC,IAAD,UACI,cAAC,IAAD,CACIzB,MAAOkB,KAAKzB,MAAMC,kBAClBgC,OAAQ,CACJ,CAAEC,IAAK,OAAQC,SAAU,oBACzB,WACA,QACA,SACA,cACA,UAEJC,OAAK,EACLC,SAAO,EACPC,eAAa,EACbC,YAAe,CACX,OACE,SAACZ,GAAD,OACE,6BACI,cAAC,IAAD,CAASa,MAAM,SAASC,MAAO,CAACK,OAAO,IAAKH,QAAS,SAACrB,GAC9C,EAAKvB,wBAAwB4B,IADrC,SAGI,gDAIV,OACF,SAACA,GAAD,OACI,6BAEwB,KAAhBA,EAAKf,QACL,qBAAKgC,UAAU,WAAf,SACI,cAAC,IAAD,CACIC,IAAKlB,EAAKf,OACVgC,UAAU,+BAhG9C,cAAC,IAAD,CAAUG,GAAG,e,GAtJPC,aAsQXzD","file":"static/js/15.cbf2c66e.chunk.js","sourcesContent":["import { firestore } from \"../firebase\";\r\n\r\nconst db = firestore.collection(\"/products\");\r\nclass ProductsDataService {\r\n    getAll() {\r\n        return db;\r\n    }\r\n\r\n    create(products) {\r\n        return db.add(products);\r\n    }\r\n\r\n    update(id, value) {\r\n        return db.doc(id).update(value);\r\n    }\r\n\r\n    delete(id) {\r\n        return db.doc(id).delete();\r\n    }\r\n}\r\n\r\nexport default new ProductsDataService();","import React, { Component } from 'react';\r\nimport ProductsDataService from '../../services/products.service';\r\nimport {\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CDataTable,\r\n    CCol,\r\n    CRow,\r\n    CButton,\r\n    CImg\r\n} from '@coreui/react';\r\n\r\nimport CIcon from '@coreui/icons-react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getUser } from '../../common';\r\n\r\nclass AllProducts extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.refreshList = this.refreshList.bind(this);\r\n        this.setActiveProduct = this.setActiveProduct.bind(this);\r\n        this.onDataChange = this.onDataChange.bind(this);\r\n        this.onRemoveProduct = this.onRemoveProduct.bind(this);\r\n        this.onAddTrendingProduct = this.onAddTrendingProduct.bind(this);\r\n        this.onRemoveTrendingProduct = this.onRemoveTrendingProduct.bind(this);\r\n        this.state = {\r\n            products: [],\r\n            trending_products: [],\r\n            currentProduct: null,\r\n            currentIndex: -1\r\n        };\r\n\r\n        this.unsubscribe = undefined;\r\n    }\r\n\r\n    onRemoveTrendingProduct(product) {\r\n        let items = [];\r\n        let id = product.id;\r\n        items.push({\r\n            category: product.category,\r\n            name: product.name,\r\n            price: product.price,\r\n            imgurl: product.imgurl,\r\n            description: product.description,\r\n            trending: false\r\n        });\r\n        \r\n        ProductsDataService.update(id, items[0])\r\n        .then(()=>\r\n        {\r\n            console.log(\"Update a product successfully!\");\r\n            this.unsubscribe = ProductsDataService.getAll()\r\n            .orderBy(\"name\", \"asc\")\r\n            .onSnapshot(this.onDataChange);\r\n        })\r\n        .catch((e) => {\r\n            console.log(e.message);\r\n        })\r\n    }\r\n\r\n    onAddTrendingProduct(product) {\r\n        let items = [];\r\n        let id = product.id;\r\n        items.push({\r\n            category: product.category,\r\n            name: product.name,\r\n            price: product.price,\r\n            imgurl: product.imgurl,\r\n            description: product.description,\r\n            trending: true\r\n        });\r\n        \r\n        ProductsDataService.update(id, items[0])\r\n        .then(()=>\r\n        {\r\n            console.log(\"Update a product successfully!\");\r\n            this.unsubscribe = ProductsDataService.getAll()\r\n            .orderBy(\"name\", \"asc\")\r\n            .onSnapshot(this.onDataChange);\r\n        })\r\n        .catch((e) => {\r\n            console.log(e.message);\r\n        })\r\n    }\r\n\r\n    onRemoveProduct(pid) {\r\n        ProductsDataService.delete(pid)\r\n        .then(() => {\r\n            console.log(\"Remove a product successfully!\");\r\n            this.unsubscribe = ProductsDataService.getAll()\r\n            .orderBy(\"name\", \"asc\")\r\n            .onSnapshot(this.onDataChange);\r\n        })\r\n        .catch((e) => {\r\n\r\n            console.log(e.message);\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unsubscribe = ProductsDataService.getAll()\r\n        .orderBy(\"name\", \"asc\")\r\n        .onSnapshot(this.onDataChange);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unsubscribe();\r\n    }\r\n\r\n    onDataChange(items) {\r\n        let products = [];\r\n        let trending = [];\r\n        items.forEach(item => {\r\n            let id = item.id;\r\n            let data = item.data();\r\n            \r\n            products.push({\r\n                id: id,\r\n                category: data.category,\r\n                name: data.name,\r\n                price: data.price,\r\n                imgurl: data.imgurl,\r\n                description: data.description,\r\n                trending: data.trending\r\n            });\r\n\r\n            if (data.trending)\r\n            {\r\n                trending.push({\r\n                    id: id,\r\n                    category: data.category,\r\n                    name: data.name,\r\n                    price: data.price,\r\n                    imgurl: data.imgurl,\r\n                    description: data.description,\r\n                    trending: data.trending\r\n                });\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            products: products,\r\n            trending_products: trending,\r\n        });\r\n    }\r\n\r\n    refreshList() {\r\n        this.setState({\r\n            currentProduct: null,\r\n            currentIndex: -1\r\n        });\r\n    }\r\n\r\n    setActiveProduct(product, index) {\r\n        this.setState({\r\n            currentProduct: product,\r\n            currentIndex: index,\r\n        });\r\n    }\r\n\r\n    render ()\r\n    {\r\n        const user = getUser();\r\n        if (!user)\r\n        {\r\n            return (<Redirect to=\"/login\" />);\r\n        }\r\n        return (\r\n            <CRow>\r\n                <CCol xl={6}>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            All Foods\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                            <CDataTable\r\n                                items={this.state.products}\r\n                                fields={[\r\n                                    { key: 'name', _classes: 'font-weight-bold' },\r\n                                    'category', \r\n                                    'price', \r\n                                    'imgurl', \r\n                                    'description',\r\n                                    'action'\r\n                                ]}\r\n                                hover\r\n                                striped\r\n                                clickableRows\r\n                                scopedSlots = {{\r\n                                    'action':\r\n                                        (item)=>(\r\n                                            <td>\r\n                                                <CButton color='danger' style={{height:36}, {width:120}} onClick={(e) => {\r\n                                                        this.onRemoveProduct(item.id);\r\n                                                    }}>\r\n                                                    <small>Remove</small>\r\n                                                </CButton>\r\n                                                <CButton color='primary' style={{height:36}, {width:120}} onClick={(e) => {\r\n                                                        this.onAddTrendingProduct(item);\r\n                                                    }}>\r\n                                                    <small>Trending</small>\r\n                                                </CButton>\r\n                                            </td>\r\n                                      ),\r\n                                      'imgurl':\r\n                                        (item)=>(\r\n                                            <td>\r\n                                                {\r\n                                                    item.imgurl !== \"\" &&\r\n                                                    <div className=\"cart-img\">\r\n                                                        <CImg\r\n                                                            src={item.imgurl}\r\n                                                            className=\"cart-img\"\r\n                                                        />\r\n                                                    </div>\r\n                                                }\r\n                                            </td>\r\n                                        ),\r\n                                  }}\r\n                                />\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n                <CCol xl={6}>\r\n                    <CCard>\r\n                        <CCardHeader>\r\n                            Trending Foods\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                            <CDataTable\r\n                                items={this.state.trending_products}\r\n                                fields={[\r\n                                    { key: 'name', _classes: 'font-weight-bold' },\r\n                                    'category', \r\n                                    'price', \r\n                                    'imgurl', \r\n                                    'description',\r\n                                    'action'\r\n                                ]}\r\n                                hover\r\n                                striped\r\n                                clickableRows\r\n                                scopedSlots = {{\r\n                                    'action':\r\n                                      (item)=>(\r\n                                        <td>\r\n                                            <CButton color='danger' style={{height:36}} onClick={(e) => {\r\n                                                    this.onRemoveTrendingProduct(item);\r\n                                                }}>\r\n                                                <small>Remove</small>\r\n                                            </CButton>\r\n                                        </td>\r\n                                      ),\r\n                                      'imgurl':\r\n                                    (item)=>(\r\n                                        <td>\r\n                                            {\r\n                                                item.imgurl !== \"\" &&\r\n                                                <div className=\"cart-img\">\r\n                                                    <CImg\r\n                                                        src={item.imgurl}\r\n                                                        className=\"cart-img\"\r\n                                                    />\r\n                                                </div>\r\n                                            }\r\n                                        </td>\r\n                                    ),\r\n                                  }}\r\n                                />\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllProducts;"],"sourceRoot":""}