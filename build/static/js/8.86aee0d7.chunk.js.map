{"version":3,"sources":["common.js","firebase.js","services/wallets.service.js","views/pages/register/Register.js"],"names":["getUser","userStr","sessionStorage","getItem","JSON","parse","setUserSession","token","user","setItem","stringify","removeProductFromCart","pid","items","forEach","item","index","push","count","total","price","getCartsToString","result","name","addProductToCart","imgurl","products","found","getCartItem","removeAllProductFromCart","getCartCount","getTotalPrice","componentLoader","lazyComponent","attemptsLeft","interval","Promise","resolve","reject","then","catch","error","setTimeout","validateData","type","value","errors","isValid","RegExp","test","length","auth_","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","getUserDocument","uid","a","doc","get","userDocument","data","console","generateUserDocument","displayName","phoneNumber","userRef","exists","email","set","rule","photoUrl","db","collection","WalletsDataService","add","id","update","delete","this","getAll","where","Register","useState","signUp","setSignUp","setEmail","password","setPassword","confirm","setConfirm","setDisplayName","setPhoneNumber","setError","validation","createUserWithEmailAndPasswordHandler","event","preventDefault","window","recaptchaVerifier","RecaptchaVerifier","size","callback","response","log","onPhoneNumberSubmit","appVerifier","signInWithPhoneNumber","confirmationResult","code","prompt","createUserWithEmailAndPassword","userAuth","refreshToken","create","username","payment","message","onChangeHandler","currentTarget","to","className","md","lg","xl","placeholder","autoComplete","onChange","e","color","block","onClick","style"],"mappings":"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","file":"static/js/8.86aee0d7.chunk.js","sourcesContent":["export const getUser = () => {\r\n    const userStr = sessionStorage.getItem('user');\r\n    if (userStr) return JSON.parse(userStr);\r\n    else return null;\r\n  }\r\n   \r\n  // return the token from the session storage\r\n  export const getToken = () => {\r\n    return sessionStorage.getItem('token') || null;\r\n  }\r\n   \r\n  // remove the token and user from the session storage\r\n  export const removeUserSession = () => {\r\n    sessionStorage.removeItem('token');\r\n    sessionStorage.removeItem('user');\r\n  }\r\n   \r\n  // set the token and user from the session storage\r\n  export const setUserSession = (token, user) => {\r\n    sessionStorage.setItem('token', token);\r\n    sessionStorage.setItem('user', JSON.stringify(user));\r\n  }\r\n\r\n  export const removeProductFromCart = (pid) => {\r\n    var items = [];\r\n    var products = JSON.parse(sessionStorage.getItem(\"_products\") || \"[]\");\r\n    products.forEach(function(item, index) {\r\n        if (item.pid !== pid)\r\n        {\r\n            items.push(item);\r\n        }\r\n        else\r\n        {\r\n            if (item.count > 1)\r\n            {\r\n                item.count--;\r\n                item.total = item.price * item.count;\r\n                items.push(item);\r\n            }\r\n        }\r\n    });\r\n    sessionStorage.setItem(\"_products\", JSON.stringify(items));\r\n  }\r\n\r\n  export const getCartsToString = () => {\r\n    let result = [];\r\n    var products = JSON.parse(sessionStorage.getItem(\"_products\") || \"[]\");\r\n\r\n    products.forEach(function(item, index) {\r\n        result.push(\r\n            item.name + \" $\" + item.price + \" x \" + item.count + \" = $\" + item.total\r\n        ); \r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  export const addProductToCart = (pid, name, price, imgurl) => {\r\n\r\n    var products = JSON.parse(sessionStorage.getItem(\"_products\") || \"[]\");\r\n\r\n    var found = false;\r\n    products.forEach(function(item, index) {\r\n        if (item.pid === pid)\r\n        {\r\n            found = true;\r\n            item.count++;\r\n            item.total = item.price * item.count;\r\n        }\r\n    });\r\n\r\n    \r\n    if (!found)\r\n    {\r\n        // Modifying\r\n        var item = {\r\n            pid: pid,\r\n            name: name,\r\n            price: price,\r\n            imgurl: imgurl,\r\n            total: price * 1,\r\n            count: 1\r\n        };\r\n        products.push(item);\r\n    }\r\n\r\n    // Saving\r\n    sessionStorage.setItem(\"_products\", JSON.stringify(products));\r\n}\r\n\r\nexport const getCartItem = () => {\r\n    return JSON.parse(sessionStorage.getItem('_products') || \"[]\");\r\n}\r\n\r\nexport const removeAllProductFromCart = () => {\r\n    let products = [];\r\n    sessionStorage.setItem(\"_products\", JSON.stringify(products));\r\n}\r\n\r\nexport const getCartCount = () => {\r\n    var products = JSON.parse(sessionStorage.getItem(\"_products\") || \"[]\");\r\n    var count = 0;\r\n    products.forEach(function(item, index) {\r\n        count += item.count;\r\n    });\r\n    return count;\r\n}\r\n\r\nexport const getTotalPrice = () => {\r\n    var products = JSON.parse(sessionStorage.getItem(\"_products\") || \"[]\");\r\n    var count = 0;\r\n    products.forEach(function(item, index) {\r\n        count += item.count * item.price;\r\n    });\r\n    return count;\r\n}\r\n\r\nexport default function componentLoader(lazyComponent, attemptsLeft, interval) {\r\n    return new Promise((resolve, reject) => {\r\n        lazyComponent()\r\n        .then(resolve)\r\n        .catch((error) => {\r\n            // let us retry after 1500 ms\r\n            setTimeout(() => {\r\n                if (attemptsLeft === 1) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                componentLoader(lazyComponent, attemptsLeft - 1).then(resolve, reject);\r\n            }, 5000);\r\n        });\r\n    });\r\n}\r\n\r\nexport const validateData = (type, value) => {\r\n\r\n    let errors = \"\";\r\n    let isValid = true;\r\n\r\n    if (type === 'name' && !value) {\r\n      isValid = false;\r\n      errors = \"Please enter your name.\";\r\n    }\r\n\r\n    if (type === 'email' && !value) {\r\n      isValid = false;\r\n      errors = \"Please enter your email Address.\";\r\n    }\r\n\r\n    if (type === 'email' && typeof value !== \"undefined\") {\r\n        \r\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n      if (!pattern.test(value)) {\r\n        isValid = false;\r\n        errors = \"Please enter valid email address.\";\r\n      }\r\n    }\r\n\r\n    if (type === 'phone' && !value) {\r\n      isValid = false;\r\n      errors = \"Please enter your phone number.\";\r\n    }\r\n\r\n    if (type === 'phone' && typeof value !== \"undefined\") {\r\n        \r\n      var pattern = new RegExp(/^\\+[0-9\\b]+$/);\r\n      if (!pattern.test(value)) {\r\n        isValid = false;\r\n        errors = \"Please enter only number.\";\r\n      }else if(value.length < 10){\r\n        isValid = false;\r\n        errors = \"Please enter valid phone number.\";\r\n      }\r\n    }\r\n\r\n    return [isValid, errors];\r\n}","import firebase from 'firebase/app'\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCtv0SrPL04mrat1QIvWI8Q4e7yGoWgt1s\",\r\n  authDomain: \"ict342-user.firebaseapp.com\",\r\n  databaseURL: \"https://ict342-user-default-rtdb.firebaseio.com\",\r\n  projectId: \"ict342-user\",\r\n  storageBucket: \"ict342-user.appspot.com\",\r\n  messagingSenderId: \"71121181583\",\r\n  appId: \"1:71121181583:web:475e97730cdd78962189fa\"\r\n};\r\n\r\n\r\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);\r\nexport const auth_ = firebase.auth;\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n\r\nexport const getUserDocument = async uid => {\r\n    if (!uid) return null;\r\n    try {\r\n        const userDocument = await firestore.doc(`users/${uid}`).get();\r\n        return {\r\n            uid,\r\n            ...userDocument.data()\r\n        };\r\n    } catch (error) {\r\n        console.error(\"Error fetching user\", error);\r\n    }\r\n};\r\n\r\n\r\nexport const generateUserDocument = async (user, displayName, phoneNumber) => {\r\n    if (!user) return;\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    const snapshot = await userRef.get();\r\n    if (!snapshot.exists) {\r\n        const rule = \"\";\r\n        const photoUrl = \"\";\r\n        const { email } = user;\r\n        try {\r\n            await userRef.set({\r\n                email,\r\n                displayName,\r\n                phoneNumber,\r\n                rule,\r\n                photoUrl,\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Error creating user document\", error);\r\n        }\r\n    }\r\n    return getUserDocument(user.uid);\r\n};\r\n\r\n","import { firestore } from \"../firebase\";\r\n\r\nconst db = firestore.collection(\"/wallets\");\r\nclass WalletsDataService {\r\n    getAll() {\r\n        return db;\r\n    }\r\n\r\n    create(item) {\r\n        return db.add(item);\r\n    }\r\n\r\n    update(id, value) {\r\n        return db.doc(id).update(value);\r\n    }\r\n\r\n    delete(id) {\r\n        return db.doc(id).delete();\r\n    }\r\n\r\n    getFromUser(uid) {\r\n        return this.getAll().where(\"uid\", \"==\", uid).get();\r\n    }\r\n}\r\n\r\nexport default new WalletsDataService();","import React, {useState} from 'react'\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardFooter,\r\n    CCol,\r\n    CContainer,\r\n    CForm,\r\n    CInput,\r\n    CInputGroup,\r\n    CInputGroupPrepend,\r\n    CInputGroupText,\r\n    CRow\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport {auth, generateUserDocument, auth_} from \"../../../firebase\";\r\nimport { Redirect } from 'react-router';\r\nimport { setUserSession, getUser, validateData } from '../../../common';\r\nimport WalletsDataService from '../../../services/wallets.service';\r\n\r\nconst Register = () => {\r\n    const [signUp, setSignUp] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirm, setConfirm] = useState(\"\");\r\n    const [displayName, setDisplayName] = useState(\"\");\r\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n    \r\n    const setUpRecaptcha = () => {\r\n        window.recaptchaVerifier = new auth_.RecaptchaVerifier(\r\n            'recaptcha-container', \r\n            {\r\n                size: 'invisible',\r\n                callback: (response) => {\r\n                    // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n                    console.log(\"Ok: \" + response);\r\n                    this.onPhoneNumberSubmit();\r\n                },\r\n            }\r\n        );\r\n    }\r\n\r\n    const validation = () => {\r\n        if (displayName === \"\")\r\n        {\r\n            setError(\"Please input User Name!\");\r\n            return false;\r\n        }        \r\n\r\n        if (email === \"\")\r\n        {\r\n            setError(\"Please input Email!\")\r\n            return false;\r\n        }\r\n\r\n        if (phoneNumber === \"\")\r\n        {\r\n            setError(\"Please input Phone Number!\");\r\n            return false;\r\n        }\r\n\r\n        if (password === \"\")\r\n        {\r\n            setError(\"Please input Password!\");\r\n            return false;\r\n        }\r\n\r\n        if (password !== confirm)\r\n        {\r\n            setError(\"Please confirm the Password!\");\r\n            return false;\r\n        }\r\n\r\n        setError(null);\r\n        return true;\r\n    }\r\n\r\n    const createUserWithEmailAndPasswordHandler = (event, email, password, phoneNumber, displayName) => {\r\n        event.preventDefault();\r\n        setError(null);\r\n        try {\r\n            if (validation() === false)\r\n                return;\r\n\r\n            setUpRecaptcha();\r\n            const appVerifier = window.recaptchaVerifier;\r\n            auth.signInWithPhoneNumber(phoneNumber, appVerifier)\r\n                .then((confirmationResult) => {\r\n                    // SMS sent. Prompt user to type the code from the message, then sign the\r\n                    // user in with confirmationResult.confirm(code).\r\n                    window.confirmationResult = confirmationResult;\r\n                    const code = window.prompt(\"Enter OTP: \");\r\n                    confirmationResult.confirm(code).then((result) => {\r\n                        // User signed in successfully.\r\n                        const user = result.user;\r\n                        console.log(\"user: \" + user);\r\n                        auth.createUserWithEmailAndPassword(email, password)\r\n                        .then(userAuth => {\r\n                            console.log(userAuth);\r\n                            generateUserDocument(userAuth.user, displayName, phoneNumber)\r\n                            .then(user => {\r\n                                console.log(\"user: \" + user);\r\n                                setUserSession(userAuth.user.refreshToken, user);\r\n                                setSignUp(true);\r\n\r\n                                WalletsDataService.create({\r\n                                    uid: user.uid,\r\n                                    username: user.displayName,\r\n                                    total: 100,\r\n                                    payment: \"Credit Card\"\r\n                                });\r\n                            })\r\n                            .catch(error => {\r\n                                console.log(\"error 01: \" + error);\r\n                                setError(error.message);\r\n                                setSignUp(false);\r\n                            });\r\n                            \r\n                        })\r\n                        .catch(error => {\r\n                            console.log(\"error 02: \" + error);\r\n                            setError(error.message);\r\n                            setSignUp(false);\r\n                        });\r\n                        // ...\r\n                    }).catch((error) => {\r\n                        // User couldn't sign in (bad verification code?)\r\n                        console.log(\"error 03: \" + error);\r\n                        setError(error.message);\r\n                        setSignUp(false);\r\n                    });\r\n                    // ...\r\n                }).catch((error) => {\r\n                    // Error; SMS not sent\r\n                    console.log(\"error 04: \" + error);\r\n                    setError(error.message);\r\n                    setSignUp(false);\r\n                }\r\n            );\r\n            \r\n        }\r\n        catch(error) {\r\n            console.log(\"error 05: \" + error);\r\n            setSignUp(false);\r\n        }\r\n\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setConfirm(\"\");\r\n        setDisplayName(\"\");\r\n        setPhoneNumber(\"\");\r\n        setError(null);\r\n        setSignUp(false);\r\n    };\r\n    \r\n    const onChangeHandler = event => {\r\n        const { name, value } = event.currentTarget;\r\n        if (name === \"userEmail\") {\r\n            const [isValid, error] = validateData('email', value);\r\n            if (!isValid)\r\n            {\r\n                setError(error);\r\n            }\r\n            else\r\n            {\r\n                setError(null);\r\n                setEmail(value);\r\n            }\r\n        } else if (name === \"userPassword\") {\r\n            setPassword(value);\r\n        } else if (name === \"userConfirm\") {\r\n            setConfirm(value);\r\n            if (password !== value)\r\n            {\r\n                setError(\"Please confirm the Password!\");\r\n            }\r\n            else\r\n                setError(null);\r\n        } else if (name === \"displayName\") {\r\n            const [isValid, error] = validateData('name', value);\r\n            if (!isValid)\r\n            {\r\n                setError(error);\r\n            }\r\n            else\r\n            {    \r\n                setError(null);\r\n                setDisplayName(value);\r\n            }\r\n        } else if (name === \"phoneNumber\") {\r\n            const [isValid, error] = validateData('phone', value);\r\n            if (!isValid)\r\n            {\r\n                setError(error);\r\n            }\r\n            else\r\n            {\r\n                setError(null);\r\n                setPhoneNumber(value);\r\n            }\r\n        }\r\n    };\r\n\r\n    if (signUp)\r\n    {\r\n        const user = getUser();\r\n        if (user.rule === \"admin\")\r\n            return (<Redirect to=\"/dashboard\" />);\r\n        else\r\n            return (<Redirect to=\"/today-menu\" />);\r\n    }\r\n\r\n    return (\r\n        <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n            <CContainer>\r\n                <CRow className=\"justify-content-center\">\r\n                    <CCol md=\"9\" lg=\"7\" xl=\"6\">\r\n                        <CCard className=\"mx-4\">\r\n                            <CCardBody className=\"p-4\">\r\n                                <CForm>\r\n                                    <h1>Register</h1>\r\n                                    <p className=\"text-muted\">Create your account</p>\r\n                                    <CInputGroup className=\"mb-3\">\r\n                                        <CInputGroupPrepend>\r\n                                            <CInputGroupText>\r\n                                                <CIcon name=\"cil-user\" />\r\n                                            </CInputGroupText>\r\n                                        </CInputGroupPrepend>\r\n                                        <CInput type=\"text\" placeholder=\"User Name\" name=\"displayName\" autoComplete=\"userName\" \r\n                                                onChange={(e) => {\r\n                                                    onChangeHandler(e);\r\n                                                }}/>\r\n                                    </CInputGroup>\r\n                                    <CInputGroup className=\"mb-3\">\r\n                                        <CInputGroupPrepend>\r\n                                            <CInputGroupText>@</CInputGroupText>\r\n                                        </CInputGroupPrepend>\r\n                                        <CInput type=\"email\" placeholder=\"Email\" name=\"userEmail\" autoComplete=\"email\" \r\n                                                onChange={(e) => {\r\n                                                    onChangeHandler(e);\r\n                                                }} />\r\n                                    </CInputGroup>\r\n                                    <CInputGroup className=\"mb-3\">\r\n                                        <CInputGroupPrepend>\r\n                                            <CInputGroupText>\r\n                                            <CIcon name=\"cil-phone\" />\r\n                                            </CInputGroupText>\r\n                                        </CInputGroupPrepend>\r\n                                        <CInput type=\"phonenumber\" placeholder=\"+12345678901 for Testing\" name=\"phoneNumber\" autoComplete=\"phoneNumber\" \r\n                                                onChange={(e) => {\r\n                                                    onChangeHandler(e);\r\n                                                }} />\r\n                                    </CInputGroup>\r\n                                    <CInputGroup className=\"mb-3\">\r\n                                        <CInputGroupPrepend>\r\n                                            <CInputGroupText>\r\n                                                <CIcon name=\"cil-lock-locked\" />\r\n                                            </CInputGroupText>\r\n                                        </CInputGroupPrepend>\r\n                                        <CInput type=\"password\" placeholder=\"Password\" name=\"userPassword\" autoComplete=\"new-password\" \r\n                                                onChange={(e) => {\r\n                                                    onChangeHandler(e);\r\n                                                }} />\r\n                                    </CInputGroup>\r\n                                    <CInputGroup className=\"mb-4\">\r\n                                        <CInputGroupPrepend>\r\n                                            <CInputGroupText>\r\n                                                <CIcon name=\"cil-lock-locked\" />\r\n                                            </CInputGroupText>\r\n                                        </CInputGroupPrepend>\r\n                                        <CInput type=\"password\" placeholder=\"Repeat password\" name=\"userConfirm\" autoComplete=\"new-password\" \r\n                                                onChange={(e) => {\r\n                                                    onChangeHandler(e);\r\n                                                }} />\r\n                                    </CInputGroup>\r\n                                    <CButton color=\"success\" block onClick={(e) => {\r\n                                        createUserWithEmailAndPasswordHandler(e, email, password, phoneNumber, displayName);\r\n                                    }}>Create Account</CButton>\r\n                                </CForm>\r\n                            </CCardBody>\r\n                            {error && error.length > 0 && <>\r\n                                    <CCardFooter className=\"p-4\">\r\n                                        <CRow>\r\n                                            <small style={{color: 'red'}}>{error}</small>\r\n                                        </CRow>\r\n                                    </CCardFooter>\r\n                                </>}\r\n                        </CCard>\r\n                    </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                    <div id='recaptcha-container'></div>\r\n                </CRow>\r\n            </CContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"],"sourceRoot":""}